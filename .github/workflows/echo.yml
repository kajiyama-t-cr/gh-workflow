name: echo sample

on:
  push:
    branches:
      - staging
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
      debug:
        description: "Enable debug mode"
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Show inputs
        run: |
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Debug Mode: ${{ github.event.inputs.debug }}"
          echo "branch ${{ github.event.inputs.branch }}"

      - run: |
          echo '1' $GITHUB_REF
          echo '2' ${{ github.ref }}
          echo '3' ${{ github.ref_name }}
          echo '4' ${{ github.head_ref }}
          echo '5' ${{ github.base_ref }}

      - name: greet
        uses: ./.github/composite/hello
        with:
          path: ${{ github.ref_name || 'staging' }}

      - name: Cache foo node_modules
        id: cache-foo-node-modules
        uses: actions/cache@v3
        with:
          path: foo/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('foo/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
    
      - name: Install foo dependencies
        if: steps.cache-foo-node-modules.outputs.cache-hit != 'true'
        shell: bash
        run: npm install --prefix foo

      - name: Cache bar node_modules
        id: cache-bar-node-modules
        uses: actions/cache@v3
        with:
          path: bar/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('bar/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
    
      - name: Install bar dependencies
        if: steps.cache-bar-node-modules.outputs.cache-hit != 'true'
        shell: bash
        run: npm install --prefix bar
