name: Check Holiday Workflow

on:
  workflow_call:
    outputs:
      is_holiday:
        value: ${{ jobs.check_holiday.outputs.is_holiday }}

jobs:
  check_holiday:
    runs-on: ubuntu-latest
    outputs:
      is_holiday: ${{ steps.is_holiday.outputs.is_holiday }}
    steps:
      - uses: actions/setup-node@v4
      - run: npm install @holiday-jp/holiday_jp
      - uses: actions/github-script@v7
        id: is_holiday
        with:
          script: |
            const holiday_jp = require(`${process.env.GITHUB_WORKSPACE}/node_modules/@holiday-jp/holiday_jp`)
            // new Date() はUTCなので、日本時間に変換
            const jstDate = new Date(new Date().toLocaleString('en-US', { timeZone: 'Asia/Tokyo' }));

            /**
            * 指定された日付がその月の最初の営業日かどうかを判定する関数
            * ※ 営業日：土日および祝日以外の日
            * @param {Date} date 判定対象の日付
            * @returns {boolean} その月の最初の営業日ならtrue、そうでなければfalse
            */
            function isFirstBusinessDay(date) {
              const year = date.getFullYear();
              const month = date.getMonth();
              let firstBusinessDay = new Date(year, month, 1);

              // 1日が週末または祝日の場合、次の日に進める
              while (
                firstBusinessDay.getDay() === 0 || 
                firstBusinessDay.getDay() === 6 ||
                holiday_jp.isHoliday(firstBusinessDay)
              ) {
                firstBusinessDay.setDate(firstBusinessDay.getDate() + 1);
              }

              // 判定対象の日付と、求めた最初の営業日が一致しているかを比較
              return date.getFullYear() === firstBusinessDay.getFullYear() &&
                    date.getMonth() === firstBusinessDay.getMonth() &&
                    date.getDate() === firstBusinessDay.getDate();
            }

            core.setOutput('is_holiday', isFirstBusinessDay(jstDate));
            